// <auto-generated />
using System;
using JobPortal.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobPortal.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JobDetailsJobSeeker", b =>
                {
                    b.Property<int>("JobDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("JobSeekerId")
                        .HasColumnType("int");

                    b.HasKey("JobDetailsId", "JobSeekerId");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("JobDetailsJobSeeker");
                });

            modelBuilder.Entity("JobPortal.Domains.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Register_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Register_id")
                        .IsUnique();

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("JobPortal.Domains.JobDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeadlineAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobPoster_id")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobType")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfVacency")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobPoster_id");

                    b.ToTable("JobDetails");
                });

            modelBuilder.Entity("JobPortal.Domains.JobPoster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Register_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Register_id")
                        .IsUnique();

                    b.ToTable("JobPoster");
                });

            modelBuilder.Entity("JobPortal.Domains.JobSeeker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Register_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Register_id")
                        .IsUnique();

                    b.ToTable("JobSeeker");
                });

            modelBuilder.Entity("JobPortal.Domains.Register", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Register");
                });

            modelBuilder.Entity("JobDetailsJobSeeker", b =>
                {
                    b.HasOne("JobPortal.Domains.JobDetails", null)
                        .WithMany()
                        .HasForeignKey("JobDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobPortal.Domains.JobSeeker", null)
                        .WithMany()
                        .HasForeignKey("JobSeekerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobPortal.Domains.Admin", b =>
                {
                    b.HasOne("JobPortal.Domains.Register", "Register")
                        .WithOne("Admin")
                        .HasForeignKey("JobPortal.Domains.Admin", "Register_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Register");
                });

            modelBuilder.Entity("JobPortal.Domains.JobDetails", b =>
                {
                    b.HasOne("JobPortal.Domains.JobPoster", "JobPoster")
                        .WithMany("JobDetail")
                        .HasForeignKey("JobPoster_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("JobPoster");
                });

            modelBuilder.Entity("JobPortal.Domains.JobPoster", b =>
                {
                    b.HasOne("JobPortal.Domains.Register", "Register")
                        .WithOne("JobPoster")
                        .HasForeignKey("JobPortal.Domains.JobPoster", "Register_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Register");
                });

            modelBuilder.Entity("JobPortal.Domains.JobSeeker", b =>
                {
                    b.HasOne("JobPortal.Domains.Register", "Register")
                        .WithOne("JobSeeker")
                        .HasForeignKey("JobPortal.Domains.JobSeeker", "Register_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Register");
                });

            modelBuilder.Entity("JobPortal.Domains.JobPoster", b =>
                {
                    b.Navigation("JobDetail");
                });

            modelBuilder.Entity("JobPortal.Domains.Register", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("JobPoster");

                    b.Navigation("JobSeeker");
                });
#pragma warning restore 612, 618
        }
    }
}
